{"version":3,"sources":["services/persons.js","components/Button.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Button","onClick","text","Input","value","onChange","People","list","fil","del","filter","p","name","includes","map","key","person","Person","number","Notification","message","isError","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","err","setErr","success","setSuccess","useEffect","personService","res","errorMsg","msg","setTimeout","successMsg","event","target","onSubmit","preventDefault","newPerson","newList","length","returnedPerson","concat","updateP","window","confirm","catch","n","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4917536a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, remove}","import React from 'react'\n\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>\n\nexport default Button","import React, {useState, useEffect} from 'react'\nimport personService from './services/persons'\nimport Button from './components/Button'\n\nconst Input = ({text, value, onChange}) => {\n    return(\n        <div>\n            {text} <input \n            value = {value}\n            onChange = {onChange}/>\n        </div>\n    )\n}\nconst People = ({list, fil, del}) => {\n    return(\n        list\n        .filter(p => p.name.includes(fil))\n        .map((p)=> <Person key={p.name} person={p} del={del}/>))\n}\nconst Person = ({person, del}) => {\n    return(\n    <p>\n        {person.name}<br/>\n        {person.number}\n        <Button onClick={()=>del(person)} text=\"delet\" />\n    </p>)\n}\nconst Notification = ({ message, isError}) => {\n    if (message === null) {\n      return null\n    }\n    if (isError) {\n        return(\n        <div className=\"error\">\n            {message}\n        </div>)\n    }\n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [err, setErr] = useState(null)\n  const [success, setSuccess] = useState(null)\n\n  //Import initial JSON data\n  useEffect(() => {\n    personService\n        .getAll()\n        .then(res => {\n            setPersons(res)\n        })\n  }, [])\n  //Adding new data\n  const handleForm = (event) => {\n    event.preventDefault()\n    const newPerson = {\n        name:newName,\n        number:newNumber\n    }\n    const newList = persons.filter((p) => p.name === newName)\n    if (newList.length === 0) { //If new name is not added\n        //Add new\n        personService\n        .create(newPerson)\n        .then(returnedPerson => {\n            successMsg(`${returnedPerson.name} was added!`)\n            setPersons(persons.concat(returnedPerson))\n        })\n    } else {\n        //Update info?\n        const updateP = newList[0] //newList should only have 1 entry due to no duplicate entries \n        const response = window.confirm(`Do you want to update the number for ${updateP.name}?`)\n        if (response) { \n            //Update is go!\n            personService\n            .update(updateP.id, newPerson)\n            .then(returnedPerson => {\n                successMsg(`Number for ${updateP.name} updated!`)\n                setPersons(persons\n                        .map(p => \n                            p.id !== returnedPerson.id ?\n                            p : returnedPerson\n                        ))\n            })\n            .catch(err =>{\n                errorMsg(`${updateP.name} has already been removed by someone, could not make changes`)\n                setPersons(persons.filter(n => n.id !== updateP.id))\n            })\n        } else {\n            errorMsg(`Number for ${updateP.name} was not updated`)\n        }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n  //Deleting data\n  const askAndDelete = p => {\n    const response = window.confirm(`Are you sure you want to delete ${p.name}?`)\n    if (response) {\n        personService\n        .remove(p.id)\n        .then(() => {\n            errorMsg(`${p.name} was deleted`)\n            setPersons(persons.filter(n => n.id !== p.id))\n        })\n    }\n  }\n  //Notification \n  const errorMsg = msg => {\n    setErr(msg)\n      setTimeout(() => {\n        setErr(null)\n      }, 5000)\n  }\n  const successMsg = msg => {\n    setSuccess(msg)\n      setTimeout(() => {\n        setSuccess(null)\n      }, 5000)\n  }\n\n  //handlers\n  const handleNameField = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberField = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={err} isError={true}/>\n      <Notification message={success} isError={false}/>\n        <Input text=\"Filter\" value={filter} onChange={handleFilter}/>\n      <h2>Add new person</h2>\n    <div>\n        <form onSubmit = {handleForm}>\n            <Input text=\"Nimi:\" value={newName} onChange={handleNameField} />\n            <Input text=\"Number:\" value={newNumber} onChange={handleNumberField} />\n            <button type=\"submit\">add</button>\n        </form>\n    </div>\n      <h2>Numbers</h2>\n      <People list={persons} fil={filter} del={askAndDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}